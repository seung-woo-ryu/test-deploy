name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: klol/was           # set this to your Amazon ECR repository name
  CONTAINER_NAME: klol-server           # set this to the name of the container in the
  JAR_FILE_NAME: deploy-0.0.1-SNAPSHOT.jar
  TARGET_FILE_NAME: app.jar

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4.4.0
      with:
        distribution: 'temurin' # 배포판을 지정해야 함
        java-version: '17'
        java-package: jdk

    - name: Build with Gradle
      run: |
        echo ${{ secrets.AWS_ACCESS_KEY_IE }}
        echo ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        echo ${{ secrets }}
        echo ${{ env }}
        ./gradlew build -x test
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_IE }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cp build/libs/${{ env.JAR_FILE_NAME }} ${{ env.TARGET_FILE_NAME }}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
